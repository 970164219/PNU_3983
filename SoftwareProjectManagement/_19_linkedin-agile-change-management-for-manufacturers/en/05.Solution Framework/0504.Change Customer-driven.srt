1
00:00:00.060 --> 00:00:02.030
- [Instructor] In our last case study,

2
00:00:02.030 --> 00:00:06.020
we examined an internal, or innovation-driven change.

3
00:00:06.020 --> 00:00:08.010
Now, what we're going to do is extend

4
00:00:08.010 --> 00:00:09.090
this thought a little bit and include

5
00:00:09.090 --> 00:00:12.070
an external, or customer-driven change.

6
00:00:12.070 --> 00:00:15.030
Essentially, in this case study,

7
00:00:15.030 --> 00:00:18.050
the customer wants us to design a new product

8
00:00:18.050 --> 00:00:20.070
using the sensor design that we

9
00:00:20.070 --> 00:00:22.040
created in the last case study.

10
00:00:22.040 --> 00:00:25.030
So, let's take a look at how that might work.

11
00:00:25.030 --> 00:00:26.090
Here, again, we have our containers,

12
00:00:26.090 --> 00:00:28.030
we have the innovation container,

13
00:00:28.030 --> 00:00:31.010
the library container, and the product container.

14
00:00:31.010 --> 00:00:32.020
And notice that I have the new

15
00:00:32.020 --> 00:00:35.040
sensor design in the library already.

16
00:00:35.040 --> 00:00:38.030
So, the first step would be to create a change request

17
00:00:38.030 --> 00:00:41.020
and associated change order to approve the design work.

18
00:00:41.020 --> 00:00:43.010
Again, there could be a lot of other collateral

19
00:00:43.010 --> 00:00:44.080
or paperwork that goes along with this.

20
00:00:44.080 --> 00:00:47.000
There could be communications with the customer, et cetera.

21
00:00:47.000 --> 00:00:49.010
But generally, the change request

22
00:00:49.010 --> 00:00:51.070
and change order start the process.

23
00:00:51.070 --> 00:00:53.020
Notice that I've created the change

24
00:00:53.020 --> 00:00:55.020
order in the product container.

25
00:00:55.020 --> 00:00:56.050
Last time we created the change

26
00:00:56.050 --> 00:00:58.040
order in the innovation container.

27
00:00:58.040 --> 00:01:01.010
By creating the change order in the product container,

28
00:01:01.010 --> 00:01:02.090
we are, again, segregating information

29
00:01:02.090 --> 00:01:05.020
into the appropriate buckets, so that it can be

30
00:01:05.020 --> 00:01:08.060
found later and referenced or reused.

31
00:01:08.060 --> 00:01:11.050
The second step, as you might expect, is to design

32
00:01:11.050 --> 00:01:14.050
the deliverable around the newly created sensor.

33
00:01:14.050 --> 00:01:18.050
So, here is our product as it's been designed in CAD,

34
00:01:18.050 --> 00:01:22.090
and we have a reference link back to the library component.

35
00:01:22.090 --> 00:01:25.040
So, it's important to know that the sensor's

36
00:01:25.040 --> 00:01:27.090
referenced from the library, not copied.

37
00:01:27.090 --> 00:01:30.000
So, in this scenario, we have the advantage

38
00:01:30.000 --> 00:01:32.080
of being able to freely reuse intellectual property

39
00:01:32.080 --> 00:01:36.030
as many times as we want, but not propagate duplicates

40
00:01:36.030 --> 00:01:38.060
and propagate information around.

41
00:01:38.060 --> 00:01:40.080
Again, that supports the Agile mindset,

42
00:01:40.080 --> 00:01:43.040
where you create as little documentation as possible,

43
00:01:43.040 --> 00:01:45.030
you reuse as much as possible,

44
00:01:45.030 --> 00:01:48.010
and you make things as efficient as possible.

45
00:01:48.010 --> 00:01:51.070
So, in this scenario, we have this design that is evolving

46
00:01:51.070 --> 00:01:54.020
or perhaps is even completely evolved.

47
00:01:54.020 --> 00:01:58.070
And we find out that there is a problem with that sensor.

48
00:01:58.070 --> 00:02:00.080
There is either a problem report from the customer

49
00:02:00.080 --> 00:02:02.090
or some quality check, or something

50
00:02:02.090 --> 00:02:05.020
that causes us to take action.

51
00:02:05.020 --> 00:02:07.000
So, what do we do?

52
00:02:07.000 --> 00:02:09.030
Well, continuing our thoughts about the Agile

53
00:02:09.030 --> 00:02:11.080
change management methodology,

54
00:02:11.080 --> 00:02:15.090
what we do is we go back to our innovation container;

55
00:02:15.090 --> 00:02:19.040
we create a change request to define, again,

56
00:02:19.040 --> 00:02:20.060
what we're going to be changing

57
00:02:20.060 --> 00:02:23.070
about that design that's not working;

58
00:02:23.070 --> 00:02:25.070
we revise that component, so we make

59
00:02:25.070 --> 00:02:28.010
the CAD model changes and the design changes.

60
00:02:28.010 --> 00:02:29.090
There could, of course, be a lot of loops in here,

61
00:02:29.090 --> 00:02:32.010
a lot of iterations as we set up our sprints

62
00:02:32.010 --> 00:02:33.040
and go through the design work.

63
00:02:33.040 --> 00:02:35.080
So, this could be days to weeks of work.

64
00:02:35.080 --> 00:02:38.050
I'm showing it just as one simple step.

65
00:02:38.050 --> 00:02:40.080
Once the work is complete, and we're sure

66
00:02:40.080 --> 00:02:43.040
that the sensor has been updated properly,

67
00:02:43.040 --> 00:02:46.040
we release that sensor again back into the library.

68
00:02:46.040 --> 00:02:49.080
So, we make a new version of that sensor in the library.

69
00:02:49.080 --> 00:02:52.030
In such a fashion, we're controlling

70
00:02:52.030 --> 00:02:55.050
the official version or the central version of truth

71
00:02:55.050 --> 00:02:58.050
that's available for this sensor.

72
00:02:58.050 --> 00:03:01.050
The fourth step is to perform a where used search,

73
00:03:01.050 --> 00:03:04.000
so we can get into change impact analysis.

74
00:03:04.000 --> 00:03:08.040
And here's one of the real beauties of this scheme.

75
00:03:08.040 --> 00:03:10.000
When we do our where used search,

76
00:03:10.000 --> 00:03:11.090
we may find that there's multiple products

77
00:03:11.090 --> 00:03:13.080
that reference that same sensor.

78
00:03:13.080 --> 00:03:16.060
Now, our new product development team

79
00:03:16.060 --> 00:03:19.090
can do a very knowledgeable change impact analysis

80
00:03:19.090 --> 00:03:21.080
and make knowledgeable decisions

81
00:03:21.080 --> 00:03:23.060
about what they should do, whether they should

82
00:03:23.060 --> 00:03:26.020
revise the sensor or revise the product,

83
00:03:26.020 --> 00:03:30.020
or create a completely new variant of the sensor

84
00:03:30.020 --> 00:03:32.090
to be used in the different product.

85
00:03:32.090 --> 00:03:35.050
In such a fashion, we have a lot of flexibility

86
00:03:35.050 --> 00:03:38.080
in the new product development process.

87
00:03:38.080 --> 00:03:40.060
So, if we take a look at how does this

88
00:03:40.060 --> 00:03:42.080
support Agile change management,

89
00:03:42.080 --> 00:03:46.010
well, again, showin' how it supports design reuse.

90
00:03:46.010 --> 00:03:48.030
It certainly fosters closed-loop feedback

91
00:03:48.030 --> 00:03:52.000
because you have links, and you have related information.

92
00:03:52.000 --> 00:03:54.020
A lot of this could be rolled into what we've called

93
00:03:54.020 --> 00:03:56.040
the model-based design paradigm,

94
00:03:56.040 --> 00:03:58.020
and we're using it very simply.

95
00:03:58.020 --> 00:04:00.080
And lastly, we've shown how we can fence in change,

96
00:04:00.080 --> 00:04:01.090
which is something we discussed

97
00:04:01.090 --> 00:04:03.040
early in this course, as well,

98
00:04:03.040 --> 00:04:05.080
to where we're fencing in the change to what's happening

99
00:04:05.080 --> 00:04:09.030
on that sensor and then making knowledgeable decisions

100
00:04:09.030 --> 00:04:12.010
using our change impact analysis processes

101
00:04:12.010 --> 00:04:15.000
of where those changes should be applied.

