0
00:00:00,0 --> 00:00:05,0
https://git.ir/

1
00:00:03.090 --> 00:00:07.050
- So, I guess it depends on whether you know

2
00:00:07.050 --> 00:00:10.020
much about websites before you start.

3
00:00:10.020 --> 00:00:11.040
'Cause if you've seen lots of websites,

4
00:00:11.040 --> 00:00:13.020
and you kind of know what you want,

5
00:00:13.020 --> 00:00:15.040
then it's fairly easy to define what you want from yours,

6
00:00:15.040 --> 00:00:17.020
whereas if you've never

7
00:00:17.020 --> 00:00:19.050
done anything to do with websites before,

8
00:00:19.050 --> 00:00:21.090
or you want a really radical website,

9
00:00:21.090 --> 00:00:24.020
then you might approach it differently.

10
00:00:24.020 --> 00:00:25.070
But that actually brings me to something else

11
00:00:25.070 --> 00:00:27.000
I've got in my little list of questions.

12
00:00:27.000 --> 00:00:30.010
Somebody said to me, that Agile works

13
00:00:30.010 --> 00:00:32.040
when they've done similar things before,

14
00:00:32.040 --> 00:00:33.090
they've got a bit of a process,

15
00:00:33.090 --> 00:00:35.090
because then they know what,

16
00:00:35.090 --> 00:00:36.070
they pretty much know

17
00:00:36.070 --> 00:00:38.040
what order of sprints they're going to be in,

18
00:00:38.040 --> 00:00:41.010
they know what the sprints are, before they start.

19
00:00:41.010 --> 00:00:42.060
Whereas with Waterfall, often,

20
00:00:42.060 --> 00:00:44.080
you're having to plan something you've never done before,

21
00:00:44.080 --> 00:00:48.020
like space rocket to Mars, or something,

22
00:00:48.020 --> 00:00:49.040
you'd have to do Waterfall,

23
00:00:49.040 --> 00:00:50.080
wouldn't you, you wouldn't do that Agile,

24
00:00:50.080 --> 00:00:53.080
'cause you'd have to really have it carefully planned.

25
00:00:53.080 --> 00:00:56.000
So this guy was saying to me that Agile is great

26
00:00:56.000 --> 00:00:57.090
if you've done similar things before,

27
00:00:57.090 --> 00:01:00.020
and then they can evolve their way through,

28
00:01:00.020 --> 00:01:01.020
and there'll be variations,

29
00:01:01.020 --> 00:01:04.080
but they kind of know roughly what's involved.

30
00:01:04.080 --> 00:01:06.080
Do you think there's a difference there,

31
00:01:06.080 --> 00:01:09.030
that Waterfall is for stuff you've never done,

32
00:01:09.030 --> 00:01:12.050
or is Agile better for when you go totally into the unknown?

33
00:01:12.050 --> 00:01:14.060
- Yeah, I would argue the opposite.

34
00:01:14.060 --> 00:01:18.070
I would say that if you have a ends, you know,

35
00:01:18.070 --> 00:01:22.000
if you can get your customer to give you requirements,

36
00:01:22.000 --> 00:01:23.070
and that customer will look you in the eye

37
00:01:23.070 --> 00:01:25.090
and say, "I'm not going to change this,

38
00:01:25.090 --> 00:01:27.040
"I've done this a million times,

39
00:01:27.040 --> 00:01:30.090
"I understand this process, I know exactly what I want,"

40
00:01:30.090 --> 00:01:34.010
then go Waterfall, 'cause it's,

41
00:01:34.010 --> 00:01:35.070
you can have that kind of planning.

42
00:01:35.070 --> 00:01:36.090
- [Chris] It would be easy, that's a dream project.

43
00:01:36.090 --> 00:01:37.080
- Yeah, I know.

44
00:01:37.080 --> 00:01:38.060
- [Chris] Yeah.

45
00:01:38.060 --> 00:01:42.090
- And so, but if your customer is like most customers

46
00:01:42.090 --> 00:01:45.010
and they, and this is where I find that

47
00:01:45.010 --> 00:01:47.010
actually customers that have done lots of websites

48
00:01:47.010 --> 00:01:49.080
or things like that are actually more likely to like Agile,

49
00:01:49.080 --> 00:01:51.090
because since they've done a lot of them,

50
00:01:51.090 --> 00:01:54.040
they have a lot of ideas that they want to implement,

51
00:01:54.040 --> 00:01:56.070
and they know that space is always changing.

52
00:01:56.070 --> 00:02:00.040
And so if they have an idea of what they want to do

53
00:02:00.040 --> 00:02:02.010
that's valuable to them,

54
00:02:02.010 --> 00:02:04.050
then I think, well it's better to do as Agile.

55
00:02:04.050 --> 00:02:07.010
Because then you can get their feedback

56
00:02:07.010 --> 00:02:09.030
and then you can kind of build it up over time

57
00:02:09.030 --> 00:02:11.030
iteratively and incrementally.

58
00:02:11.030 --> 00:02:13.060
But if you can get your requirements, by all means,

59
00:02:13.060 --> 00:02:16.090
there's no reason to have an Agile team work on a product

60
00:02:16.090 --> 00:02:19.060
if you have solid requirements that aren't going to change.

61
00:02:19.060 --> 00:02:24.040
- So if you're doing something

62
00:02:24.040 --> 00:02:25.080
you're really into the unknown,

63
00:02:25.080 --> 00:02:27.040
the customer's not quite sure what they want,

64
00:02:27.040 --> 00:02:31.020
and the Agile team are not sure how they're going to do it,

65
00:02:31.020 --> 00:02:35.030
how do they know what the sprints are going to be?

66
00:02:35.030 --> 00:02:38.080
Or do you have to know what all the sprints are,

67
00:02:38.080 --> 00:02:40.040
your backlog, before you start,

68
00:02:40.040 --> 00:02:42.070
or do you keep adding new sprints as you go along?

69
00:02:42.070 --> 00:02:45.000
I think I know the answer to this as I'm asking it.

70
00:02:45.000 --> 00:02:48.000
- Yeah, typically if you're working in Scrum,

71
00:02:48.000 --> 00:02:51.060
what they say is that Scrum teams are predictable

72
00:02:51.060 --> 00:02:53.060
but not planned.

73
00:02:53.060 --> 00:02:55.030
Which means that the customer knows

74
00:02:55.030 --> 00:02:57.070
that every two weeks they're going to get something new

75
00:02:57.070 --> 00:02:59.010
and it's going to be valuable to them,

76
00:02:59.010 --> 00:03:01.050
they're going to add value every two weeks.

77
00:03:01.050 --> 00:03:03.070
But they don't know what that's going to be.

78
00:03:03.070 --> 00:03:05.030
It's not planned out.

79
00:03:05.030 --> 00:03:09.020
And so you stop delivering the product,

80
00:03:09.020 --> 00:03:10.030
when you're working in Scrum,

81
00:03:10.030 --> 00:03:13.000
when your customer stops paying you.

82
00:03:13.000 --> 00:03:14.060
When they're just like, "I've had enough,

83
00:03:14.060 --> 00:03:17.000
"This is great, this is perfect."

84
00:03:17.000 --> 00:03:18.060
Like we said with the car,

85
00:03:18.060 --> 00:03:19.040
if we're here in London

86
00:03:19.040 --> 00:03:20.080
and the customer looks at the motorbike

87
00:03:20.080 --> 00:03:22.000
and they say, "You know what?

88
00:03:22.000 --> 00:03:23.070
"That's going to work better than a car for me.

89
00:03:23.070 --> 00:03:25.070
"Let's stop."

90
00:03:25.070 --> 00:03:26.050
Now again, if you ran that as.

91
00:03:26.050 --> 00:03:28.070
- It assumes you've managed to finish the motorbike

92
00:03:28.070 --> 00:03:30.050
before you run out of your money.

93
00:03:30.050 --> 00:03:34.000
- But remember we talk about this in terms of the,

94
00:03:34.000 --> 00:03:37.040
suspended rooms when we're planning out our house.

95
00:03:37.040 --> 00:03:39.040
Is that everything you deliver,

96
00:03:39.040 --> 00:03:41.080
it's called a potentially shippable product increment

97
00:03:41.080 --> 00:03:42.070
in Scrum.

98
00:03:42.070 --> 00:03:44.060
Everything that you deliver in Scrum

99
00:03:44.060 --> 00:03:46.040
is potentially shippable.

100
00:03:46.040 --> 00:03:50.030
And so it's not, if they stop at a motorbike,

101
00:03:50.030 --> 00:03:53.000
their motorbike doesn't need to be painted or anything.

102
00:03:53.000 --> 00:03:54.020
It's done.

103
00:03:54.020 --> 00:03:55.090
- So we're assuming that you've definitely

104
00:03:55.090 --> 00:03:57.080
got enough money to do the essential part,

105
00:03:57.080 --> 00:03:59.050
let's just call it the engine and the wheels

106
00:03:59.050 --> 00:04:00.090
and the seat or whatever.

107
00:04:00.090 --> 00:04:04.010
And then all the rest is kind of extras you might have.

108
00:04:04.010 --> 00:04:06.040
So Agile's going to work if the essential part

109
00:04:06.040 --> 00:04:08.030
of your project is quite small,

110
00:04:08.030 --> 00:04:10.050
and everything else is extras.

111
00:04:10.050 --> 00:04:11.060
Which is often the case,

112
00:04:11.060 --> 00:04:13.080
and I'm not saying that that's not valid.

113
00:04:13.080 --> 00:04:14.070
- I would say it this way,

114
00:04:14.070 --> 00:04:17.040
I would say that software,

115
00:04:17.040 --> 00:04:20.080
is if you're tearing up things and rebuilding them,

116
00:04:20.080 --> 00:04:25.000
then as you move further into your software product,

117
00:04:25.000 --> 00:04:26.040
you're actually building something

118
00:04:26.040 --> 00:04:27.070
that's more feature complete,

119
00:04:27.070 --> 00:04:29.050
and sort of will give your customer

120
00:04:29.050 --> 00:04:31.010
a little bit more of what they need.

121
00:04:31.010 --> 00:04:34.020
So I wouldn't think of it as phases,

122
00:04:34.020 --> 00:04:37.010
like once we get through four or five sprints

123
00:04:37.010 --> 00:04:39.020
we're going to have a pretty good product,

124
00:04:39.020 --> 00:04:42.030
and then every sprint after that's kind of just gravy.

125
00:04:42.030 --> 00:04:46.080
I would think of it as, okay we're delivering our sprints,

126
00:04:46.080 --> 00:04:49.030
and then our customer might pivot

127
00:04:49.030 --> 00:04:51.050
and make something completely different.

128
00:04:51.050 --> 00:04:53.010
And so I mean it's not uncommon

129
00:04:53.010 --> 00:04:56.020
to be three or four sprints into an Agile product

130
00:04:56.020 --> 00:05:00.040
and your customer completely changes their mind.

131
00:05:00.040 --> 00:05:01.070
- [Chris] Right, if that's what the customer wants to do.

132
00:05:01.070 --> 00:05:03.000
- Yeah, I mean you could end up,

133
00:05:03.000 --> 00:05:05.010
and that's good for the customer,

134
00:05:05.010 --> 00:05:07.080
because they don't have to pay for an entire project

135
00:05:07.080 --> 00:05:09.090
of something ultimately that they're going to reject.

136
00:05:09.090 --> 00:05:11.080
- No.

137
00:05:11.080 --> 00:05:12.060
- And then you could sort of

138
00:05:12.060 --> 00:05:14.030
just take what lessons you've learned

139
00:05:14.030 --> 00:05:16.020
from those previous three sprints

140
00:05:16.020 --> 00:05:18.020
and then start developing something completely new.

141
00:05:18.020 --> 00:05:19.040
- So it seems obvious to me

142
00:05:19.040 --> 00:05:22.060
that if the customer is not going to make any changes

143
00:05:22.060 --> 00:05:24.080
then you would go Waterfall.

144
00:05:24.080 --> 00:05:26.060
And if they're going to make massive changes

145
00:05:26.060 --> 00:05:28.090
and pivot suddenly halfway through

146
00:05:28.090 --> 00:05:31.040
then that would be a nightmare for Waterfall.

147
00:05:31.040 --> 00:05:33.030
I mean you could cope, you could re-plan it.

148
00:05:33.030 --> 00:05:35.050
But why have a big plan if it's quite likely

149
00:05:35.050 --> 00:05:36.090
the customer's going to change everything?

150
00:05:36.090 --> 00:05:39.050
And so that's clearly a great case for Agile.

151
00:05:39.050 --> 00:05:41.040
But I'd have thought most projects

152
00:05:41.040 --> 00:05:43.020
are going to be halfway in-between.

153
00:05:43.020 --> 00:05:44.010
They're going to be,

154
00:05:44.010 --> 00:05:46.020
the customer's got a pretty good idea of what they want,

155
00:05:46.020 --> 00:05:48.030
and there are going to be some small variations

156
00:05:48.030 --> 00:05:49.020
as they go along,

157
00:05:49.020 --> 00:05:50.090
they might want to change the color of a room,

158
00:05:50.090 --> 00:05:53.070
or they might want to move the door a bit

159
00:05:53.070 --> 00:05:56.050
when they actually see where it is.

160
00:05:56.050 --> 00:05:58.010
And I'm wondering whether you think Agile

161
00:05:58.010 --> 00:05:59.060
or Waterfall is better for a project

162
00:05:59.060 --> 00:06:03.050
where there's going to be a few changes as you go along.

163
00:06:03.050 --> 00:06:05.030
- Well I don't necessarily think about it

164
00:06:05.030 --> 00:06:06.020
in terms of changes,

165
00:06:06.020 --> 00:06:08.050
I think of it in terms of feedback.

166
00:06:08.050 --> 00:06:12.070
And so if the customer wants to give you lots of feedback,

167
00:06:12.070 --> 00:06:16.080
then I think that that's better to use an Agile approach.

168
00:06:16.080 --> 00:06:18.070
If the customer's very comfortable,

169
00:06:18.070 --> 00:06:21.000
sometimes you see this with developers

170
00:06:21.000 --> 00:06:23.010
who are on a different continent or something like that,

171
00:06:23.010 --> 00:06:24.070
where they'll spend a lot of time

172
00:06:24.070 --> 00:06:27.060
coming up with requirements, use cases and things like that.

173
00:06:27.060 --> 00:06:29.060
System shell, whatever.

174
00:06:29.060 --> 00:06:31.040
And then ship it off somewhere else

175
00:06:31.040 --> 00:06:34.020
and then have it come back as a first version.

176
00:06:34.020 --> 00:06:36.030
Then yeah that's a fine,

177
00:06:36.030 --> 00:06:38.000
if everybody's solid on that,

178
00:06:38.000 --> 00:06:39.070
then I agree that there's no reason

179
00:06:39.070 --> 00:06:41.030
to go through the trouble of having sprints

180
00:06:41.030 --> 00:06:45.070
and having the sprint reviews every two weeks

181
00:06:45.070 --> 00:06:47.000
and things like that.

